DROP TABLE IF EXISTS reviews;
DROP TABLE IF EXISTS access_tokens;
DROP TABLE IF EXISTS Orders;
DROP TABLE IF EXISTS account_details;
DROP TABLE IF EXISTS Shopping;
DROP TABLE IF EXISTS Item;
DROP TABLE IF EXISTS Trip;
DROP TABLE IF EXISTS Store;
DROP TABLE IF EXISTS Truck;
DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS Truck (
    Truck_Id INT AUTO_INCREMENT PRIMARY KEY,
    Truck_Code VARCHAR(50) NOT NULL,
    Availability_Code VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS Store (
    store_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    store_code VARCHAR(50) NOT NULL,
    latitude DECIMAL(10, 8) NOT NULL,
    longitude DECIMAL(11, 8) NOT NULL
);

CREATE TABLE IF NOT EXISTS Trip (
    Trip_Id INT AUTO_INCREMENT PRIMARY KEY,
    Source_Code VARCHAR(255) NOT NULL,
    Destination_Code VARCHAR(255) NOT NULL,
    Distance DECIMAL(10, 2) NOT NULL,
    Truck_Id INT NOT NULL,
    Price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE IF NOT EXISTS Item (
    Item_Id INT AUTO_INCREMENT PRIMARY KEY,
    Item_name VARCHAR(255) NOT NULL,
    Price DECIMAL(10, 2) NOT NULL,
    Made_in VARCHAR(100),
    Department_Code VARCHAR(50),
    Image_Path VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS Shopping (
    Receipt_Id INT AUTO_INCREMENT PRIMARY KEY,
    Store_Code VARCHAR(50) NOT NULL,
    Total_Price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    login_id VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    salt VARCHAR(255) NOT NULL, 
    access_level VARCHAR(50) DEFAULT 'user',
    city_code VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE IF NOT EXISTS account_details (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    telephone VARCHAR(20),
    address TEXT,
    email VARCHAR(255) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS Orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    date_issued DATE NOT NULL,
    date_received DATE,
    total_price DECIMAL(10, 2) NOT NULL,
    payment_type VARCHAR(50) NOT NULL,
    payment_code VARCHAR(255),
    salt VARCHAR(255),
    item_ids VARCHAR(255) NOT NULL,
    user_id INT NOT NULL,
    trip_id INT NOT NULL,
    receipt_id INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (trip_id) REFERENCES Trip(Trip_Id),
    FOREIGN KEY (receipt_id) REFERENCES Shopping(Receipt_Id)
);

CREATE TABLE IF NOT EXISTS access_tokens (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    token VARCHAR(255) NOT NULL,
    expires_at TIMESTAMP NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    item_id INT NOT NULL, 
    review VARCHAR(255) NOT NULL,
    ranking_num INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (item_id) REFERENCES Item(Item_Id)
);

INSERT INTO Truck (Truck_Code, Availability_Code) VALUES
('TRUCK1', 'AVAILABLE'),
('TRUCK2', 'UNAVAILABLE'),
('TRUCK3', 'AVAILABLE');

INSERT INTO Trip (Source_Code, Destination_Code, Distance, Truck_Id, Price) VALUES
('SRC1', 'DEST1', 100.00, 1, 50.00),
('SRC2', 'DEST2', 200.00, 2, 100.00),
('SRC3', 'DEST3', 300.00, 3, 150.00),
('SRC4', 'DEST4', 400.00, 1, 200.00);

INSERT INTO Item (Item_name, Price, Made_in, Department_Code, Image_Path) VALUES
('Samsung Galaxy S25 Ultra 512GB Titanium Silverwhite', 2098.99, 'South Korea', 'ELECTRONICS', 'assets/samsung_galaxy_ultra.png'),
('Apple iPhone 16 Pro Max 256GB Black Titanium', 1749.99, 'USA', 'ELECTRONICS', 'assets/iphone16.png'),
('Apple iPhone 15 128GB Pink', 999.99, 'USA', 'ELECTRONICS', 'assets/iphone15.png'),
('Samsung Galaxy S25 256GB Icyblue', 1288.99, 'South Korea', 'ELECTRONICS', 'assets/samsung_galaxy.png');

INSERT INTO Store (name, store_code, latitude, longitude) VALUES
('Store 1', 'STORE1', 43.65808062, -79.38138663),
('Store 2', 'STORE2', 44.00000000, -80.00000000);

INSERT INTO users (login_id, password, salt, access_level, city_code, balance) VALUES
('adam!', '64982384ef663ff4888c30bfaa9926d3', '1y26cx2tumkQu253', 'admin', 'TOR', 100.00),
('adamnotadmin', '64982384ef663ff4888c30bfaa9926d3', '1y26cx2tumkQu253', 'user', 'TOR', 100.00),
('jess', '2dfb2c44e4ced138cc361f353994629d', 'PubMpPZl/tnYkDcA', 'admin', 'TOR', 200.00),
('thao', '980dbad5dd8867d03037a172fc745c00', 'u0OPDXjh28Jjd6BI', 'admin', 'TOR', 300.00);

INSERT INTO Shopping (Store_Code, Total_Price) VALUES
('STORE1', 150.00),
('STORE2', 200.00),
('STORE1', 250.00),
('STORE2', 300.00);

INSERT INTO account_details (user_id, name, telephone, address, email) VALUES
(1, 'Adam', '0987654321', '321 Main St', 'adamadmin@torontomu.ca'),
(2, 'Adam', '1234567890', '123 Main St', 'adam@torontomu.ca'),
(3, 'Jess', '0987654321', '456 Elm St', 'jess@torontomu.ca'),
(4, 'Thao', '1122334455', '789 Oak St', 'thao@torontomu.ca');

INSERT INTO Orders (date_issued, date_received, total_price, payment_type, payment_code, salt, item_ids, user_id, trip_id, receipt_id) VALUES
('2024-01-01', '', 150.00, 'creditCard', '089127398127', 'salt', '1, 2, 3', 1, 1, 1),
('2024-02-01', '', 200.00, 'payAtDoor', '', '', '1, 2, 3', 2, 2, 2),
('2024-03-01', '', 250.00, 'debitCard', '12304972309743', 'salt', '1, 2, 3', 3, 3, 3),
('2024-04-01', '', 300.00, 'debitCard', '2398472893', 'salt', '1, 2, 3', 1, 4, 4);

INSERT INTO reviews (user_id, item_id, review, ranking_num) VALUES
(1, 1, 'Great! Works perfectly.', 5),
(2, 2, 'Decent quality, but could be improved.', 3),
(3, 3, 'Not satisfied, arrived damaged.', 2),
(4, 4, 'Absolutely love it! Highly recommend.', 5);
